# AI Agent Automation Hub - Environment Configuration
# Copy this file to .env and fill in your actual values

# ==============================================
# DISCORD BOT CONFIGURATION
# ==============================================

# Discord Bot Token (Required)
# Get this from https://discord.com/developers/applications
DISCORD_TOKEN=your_discord_bot_token_here

# Discord Guild (Server) ID (Optional but recommended)
# Right-click your Discord server and copy ID (requires Developer Mode)
DISCORD_GUILD_ID=your_guild_id_here

# Bot Command Prefix (Optional, default: !)
BOT_PREFIX=!

# ==============================================
# DATABASE CONFIGURATION
# ==============================================

# Database URL (Required)
# Format: postgresql://username:password@host:port/database
DATABASE_URL=postgresql://automation_user:your_secure_password@localhost:5432/automation_hub

# Database Connection Pool Settings (Optional)
DB_POOL_MIN_SIZE=1
DB_POOL_MAX_SIZE=10
DB_POOL_MAX_QUERIES=50000

# ==============================================
# APPLICATION CONFIGURATION
# ==============================================

# Application Mode (development, testing, production)
APP_MODE=development

# Log Level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Maximum concurrent tasks (Optional, default: 5)
MAX_CONCURRENT_TASKS=5

# Status update interval in minutes (Optional, default: 30)
STATUS_UPDATE_INTERVAL_MINUTES=30

# ==============================================
# AGENT CONFIGURATION
# ==============================================

# Enable/disable specific agents (true/false)
ENABLE_BACKEND_AGENT=true
ENABLE_TESTING_AGENT=true
ENABLE_ORCHESTRATOR=true

# Agent timeouts in seconds
AGENT_TIMEOUT=300
TASK_TIMEOUT=600

# ==============================================
# SECURITY CONFIGURATION
# ==============================================

# API Keys and tokens for external services
GITHUB_TOKEN=your_github_personal_access_token
OPENAI_API_KEY=your_openai_api_key

# Encryption key for sensitive data (generate with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())")
ENCRYPTION_KEY=your_32_byte_base64_encoded_key

# Allowed IP addresses for API access (comma-separated)
ALLOWED_IPS=127.0.0.1,::1

# ==============================================
# MONITORING AND ALERTING
# ==============================================

# Health check configuration
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=60

# Prometheus metrics (if using monitoring profile)
PROMETHEUS_ENABLED=false
PROMETHEUS_PORT=9090

# Grafana configuration (if using monitoring profile)
GRAFANA_ENABLED=false
GRAFANA_PORT=3000
GRAFANA_ADMIN_PASSWORD=secure_grafana_password

# ==============================================
# DOCKER CONFIGURATION
# ==============================================

# Compose project name
COMPOSE_PROJECT_NAME=ai-automation-hub

# Docker network name
DOCKER_NETWORK=automation_network

# Data persistence paths
POSTGRES_DATA_PATH=./data/postgres
LOGS_PATH=./logs

# ==============================================
# RASPBERRY PI SPECIFIC
# ==============================================

# Pi-specific performance settings
PI_MEMORY_LIMIT=1g
PI_CPU_LIMIT=2
PI_SWAP_SIZE=1024

# Backup configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE="0 2 * * *"
BACKUP_RETENTION_DAYS=7

# ==============================================
# DEVELOPMENT CONFIGURATION
# ==============================================

# Development mode settings
DEBUG_MODE=false
AUTO_RELOAD=false
MOCK_EXTERNAL_APIS=false

# Testing configuration
TEST_DATABASE_URL=postgresql://test_user:test_password@localhost:5432/automation_hub_test
RUN_INTEGRATION_TESTS=false

# ==============================================
# OPTIONAL FEATURES
# ==============================================

# Discord rich presence and status
DISCORD_RICH_PRESENCE=true
STATUS_MESSAGE="Automating development workflows"

# Webhook URLs for notifications
WEBHOOK_URL_SUCCESS=https://your-webhook-url-for-success-notifications
WEBHOOK_URL_ERROR=https://your-webhook-url-for-error-notifications

# Rate limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=30

# Caching
REDIS_ENABLED=false
REDIS_URL=redis://localhost:6379/0

# File upload limits
MAX_FILE_SIZE_MB=10
ALLOWED_FILE_TYPES=.py,.txt,.md,.yml,.yaml,.json

# ==============================================
# EXAMPLE VALUES FOR QUICK SETUP
# ==============================================
# Uncomment and modify these for a quick development setup:

# DISCORD_TOKEN=OTxxxxxxxxxxxxxxxxxxxxx.Yxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxx
# DATABASE_URL=postgresql://automation_user:devpassword123@localhost:5432/automation_hub
# ENCRYPTION_KEY=base64encodedkeyhere=
# APP_MODE=development
# LOG_LEVEL=DEBUG
# ENABLE_BACKEND_AGENT=true
# ENABLE_TESTING_AGENT=true
# ENABLE_ORCHESTRATOR=true